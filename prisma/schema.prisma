// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  email String  @unique
  password String
  emailedWhenContact Boolean @default(true)
  emailedWhenComment Boolean @default(true)
}

model Contact {
  id String  @id @default(auto()) @map("_id") @db.ObjectId
  username String
  email String?
  phoneNumber String
  message String
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id String  @id @default(auto()) @map("_id") @db.ObjectId
  slug String @unique
  body String
  title String
  imageUrls String[]
  ratings Rating[]
  comments Comment[]

  category Category? @relation(fields: [categoryId], references: [id])
  categoryId String? @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model Rating {
  id String  @id @default(auto()) @map("_id") @db.ObjectId
  value Int
  post Post  @relation(fields: [postId], references: [id], onDelete:Cascade)
  postId String @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id String  @id @default(auto()) @map("_id") @db.ObjectId
  username String
  email String?
  phoneNumber String
  body String
  post Post  @relation(fields: [postId], references: [id], onDelete:Cascade)
  postId String @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id String  @id @default(auto()) @map("_id") @db.ObjectId
  slug String @unique
  title String

  posts Post[] 

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
